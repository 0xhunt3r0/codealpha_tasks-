
STOCK_PRICES = {
    "AAPL": 180,
    "TSLA": 250,
    "GOOGL": 140,
    "AMZN": 170,
    "MSFT": 310,
}

def calculate_total_investment(stocks):
    """Calculate the total investment value based on stock quantities and prices."""
    total = 0
    for stock, quantity in stocks.items():
        if stock in STOCK_PRICES:
            total += STOCK_PRICES[stock] * quantity
        else:
            print(f"Warning: Stock {stock} not found in price list. Skipping...")
    return total

def save_to_file(stocks, total, filename="portfolio.txt"):
    """Save the portfolio details to a file."""
    with open(filename, "w") as file:
        file.write("Stock Portfolio Summary\n")
        file.write("======================\n")
        for stock, quantity in stocks.items():
            price = STOCK_PRICES.get(stock, 0)
            file.write(f"{stock}: {quantity} shares @ ${price} = ${price * quantity}\n")
        file.write(f"\nTotal Investment: ${total}\n")
    print(f"Portfolio saved to {filename}")

def main():
    print("Stock Portfolio Tracker")
    print("Available stocks:", ", ".join(STOCK_PRICES.keys()))

    stocks = {}
    while True:
        stock = input("Enter stock name (or 'done' to finish): ").upper()
        if stock == "DONE":
            break
        if stock not in STOCK_PRICES:
            print(f"Stock {stock} not found. Available stocks: {', '.join(STOCK_PRICES.keys())}")
            continue
        try:
            quantity = int(input(f"Enter quantity for {stock}: "))
            stocks[stock] = quantity
        except ValueError:
            print("Please enter a valid number.")

    total = calculate_total_investment(stocks)
    print(f"\nTotal Investment: ${total}")

    save = input("Save to file? (y/n): ").lower()
    if save == "y":
        save_to_file(stocks, total)

if __name__ == "__main__":
    main()
